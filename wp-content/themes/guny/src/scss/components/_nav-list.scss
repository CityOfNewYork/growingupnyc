// Navigation List
//
// List of navigation items. Very similar to List Box, but just different enough
// to spin off into its own component.
//
// markup:
// <ol class="c-nav-list {$modifiers}">
//   <li class="c-nav-list__item"><a href="#" class="c-nav-list__link">Item</a></li>
//   <li class="c-nav-list__item"><a href="#" class="c-nav-list__link">Item</a></li>
// </ol>

// Local Variables
$indicator-size: 10px;

.c-nav-list {
  display: block;
}

// Navigation List Item
.c-nav-list__item {
  display: block;
  list-style: none;
  margin-bottom: rem-calc(4);
  padding: 0;
}

// Navigation List Link
.c-nav-list__link {
  background-color: $color-secondary;
  border-radius: 3px;
  border-color: $color-secondary;
  color: $color-text-invert;
  display: block;
  font-family: $font-family-display;
  @include font-size-x-large;
  font-weight: $font-weight-extrablack;
  padding: rem-calc(20);
  position: relative;
  text-decoration: none;

  &:focus,
  &.is-active {
    background-color: $color-primary;
    border-color: $color-primary;
    color: $color-text-invert;
  }

  .no-touchevents & {
    &:hover {
      background-color: $color-primary;
      border-color: $color-primary;
      color: $color-text-invert;
    }
  }

  @include media($bp-large) {
    padding: rem-calc(28);



    @if ($language == 'ar') or ($language == 'ur') {
      &:focus,
      &.is-active {
        &:after {
          content: '';
          display: block;
          border: $indicator-size solid transparent;
          border-left-color: inherit;
          margin-top: -#{$indicator-size};
          position: absolute;
          top: 50%;

          left: -#{$indicator-size * 2};
          transform: rotate(180deg);
        }
      }
    }
    @else {
      &:focus,
      &.is-active {
        &:after {
          content: '';
          display: block;
          border: $indicator-size solid transparent;
          border-left-color: inherit;
          margin-top: -#{$indicator-size};
          position: absolute;
          right: -#{$indicator-size * 2};
          top: 50%;
        }
      }
    }


    @if ($language == 'ar') or ($language == 'ur') {
      .no-touchevents & {
        &:hover {
          &:after {
            content: '';
            display: block;
            border: $indicator-size solid transparent;
            border-left-color: inherit;
            margin-top: -#{$indicator-size};
            position: absolute;
            top: 50%;

            left: -#{$indicator-size * 2};
            transform: rotate(180deg);
          }
        }
      }
    }
    @else {
      .no-touchevents & {
        &:hover {
          &:after {
            content: '';
            display: block;
            border: $indicator-size solid transparent;
            border-left-color: inherit;
            margin-top: -#{$indicator-size};
            position: absolute;
            right: -#{$indicator-size * 2};
            top: 50%;
          }
        }
      }
    }
  }
}

.c-nav-list__link-invert {
  @extend .c-nav-list__link;
  background-color: $color-primary;
  border-color: $color-primary;

  &:focus,
  &.is-active {
    background-color: $color-brain-building-tip;
    border-color: $color-brain-building-tip;
  }

  .no-touchevents & {
    &:hover {
      background-color: $color-brain-building-tip;
      border-color: $color-brain-building-tip;
    }
  }
}

// .c-nav-list-summer 
.c-nav-list--vivid-orange {
  .c-nav-list__item {
    .c-nav-list__link {
      background: $vivid-orange;
      border-color: $vivid-orange;

      &:focus,
      &.is-active {
        background: $bright-red;
        border-color: $bright-red;
      }

      .no-touchevents & {
        &:hover {
          background: $bright-red;
          border-color: $bright-red;
        }
      }
    }
  }
}